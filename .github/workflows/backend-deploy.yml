name: Backend Deploy to EC2

on:
  push:
    branches: [main]
    paths: ['backend/**', 'docker-compose.yml']
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Create deployment package
      run: |
        zip -r backend-deploy.zip backend/ docker-compose.yml
        
    - name: Upload to S3 artifacts bucket
      run: |
        aws s3 cp backend-deploy.zip s3://${{ secrets.S3_ARTIFACTS_BUCKET }}/backend-deploy.zip

    - name: Deploy to Auto Scaling Group via SSM
      run: |
        # Get all healthy instance IDs from ASG
        INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
          --auto-scaling-group-names ${{ secrets.ASG_NAME }} \
          --query 'AutoScalingGroups[0].Instances[?LifecycleState==`InService`].InstanceId' \
          --output text)
        
        if [ -z "$INSTANCE_IDS" ]; then
          echo "‚ùå No healthy instances found in ASG"
          exit 1
        fi
        
        echo "üöÄ Deploying to instances: $INSTANCE_IDS"
        
        # Deploy to all healthy instances
        aws ssm send-command \
          --instance-ids $INSTANCE_IDS \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=[
            "cd /tmp",
            "aws s3 cp s3://${{ secrets.S3_ARTIFACTS_BUCKET }}/backend-deploy.zip .",
            "unzip -o backend-deploy.zip",
            "sudo cp -r backend/* /srv/jagasewa-backend/",
            "sudo cp docker-compose.yml /srv/jagasewa-backend/",
            "cd /srv/jagasewa-backend",
            "sudo docker-compose down",
            "sudo docker-compose build --no-cache",
            "sudo docker-compose up -d",
            "sudo docker system prune -f"
          ]' \
          --region ap-southeast-1